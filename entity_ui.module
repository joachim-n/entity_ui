<?php

/**
 * @file
 * TODO: Enter file description here.
 */

/**
 * Implements hook_entity_type_build().
 */
function entity_ui_entity_type_build(array &$entity_types) {
  foreach ($entity_types as $entity_type_id => $type) {
    if ($type->getGroup() != 'content') {
      continue;
    }
    // TODO: filter out the entity types we don't work with!
    // joachim: 1!!!

    /*
    // Set up a link template for each tab.
    // TODO: stop calling these operations!
    foreach (entity_ui_get_tabs($type) as $tab_id => $entity_tab) {
      // TODO: add a prefix to template name to prevent any clashes?
      $type->setLinkTemplate($tab_id, $type->getLinkTemplate('canonical') . '/' . $tab_id);
    }
    */

    // @todo Core forgot to add a direct way to manipulate route_provider, so
    // we have to do it the sloppy way for now.
    $providers = $type->getRouteProviderClasses() ?: [];
    if (empty($providers['entity_ui'])) {
      $providers['entity_ui'] = Drupal\entity_ui\Routing\TabRouteProvider::class;
      $type->setHandlerClass('route_provider', $providers);
    }
  }
}

// TODO: move this to a service!
// todo: EntityTypeInterface
function entity_ui_get_tabs(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  // DAMN IT CIRCULAR!!!!!!!!!!! FUCK

  $query = \Drupal::service('entity_type.manager')->getStorage('entity_tab')->getQuery();
  $query->condition('targetEntityType', $entity_type->id());
  $ids = $query->execute();
  $tabs = \Drupal::service('entity_type.manager')->getStorage('entity_tab')->loadMultiple($ids);
  return $tabs;
}
